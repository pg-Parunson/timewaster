// üõ†Ô∏è Î°úÍπÖ Ïú†Ìã∏Î¶¨Ìã∞ - Ïö¥ÏòÅ ÌôòÍ≤Ω ÏµúÏ†ÅÌôî (Î™®Îì† Î°úÍ∑∏ ÎπÑÌôúÏÑ±Ìôî)
// Production ÎπåÎìúÏóêÏÑúÎäî Î™®Îì† console.* Ïù¥ ÏûêÎèô Ï†úÍ±∞Îê® (vite.config.js ÏÑ§Ï†ï)

const isDev = import.meta.env.DEV || import.meta.env.MODE === 'development';

// üîá Î™®Îì† Î°úÍ∑∏ ÎπÑÌôúÏÑ±Ìôî (ÌïÑÏöîÏãú Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú ÌôúÏÑ±Ìôî)
const LOGGING_DISABLED = true;

// Í∞úÎ∞ú Î™®ÎìúÏóêÏÑúÎèÑ Î°úÍ∑∏ Ï∂úÎ†• ÏïàÌï® (ÏÑ±Îä• ÏµúÏ†ÅÌôî)
export const logger = {
  // üéØ ÏµúÏö∞ÏÑ† ÎîîÎ≤ÑÍ∑∏ Î°úÍ∑∏ (ÎπÑÌôúÏÑ±Ìôî)
  critical: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üö® [CRITICAL]', ...args);
    // }
  },
  
  debug: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üêõ [DEBUG]', ...args);
    // }
  },
  
  info: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.info('‚ÑπÔ∏è [INFO]', ...args);
    // }
  },
  
  warn: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.warn('‚ö†Ô∏è [WARN]', ...args);
    // }
  },
  
  error: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.error('‚ùå [ERROR]', ...args);
    // }
  },
  
  // üéØ Firebase Î°úÍ∑∏ (ÎπÑÌôúÏÑ±Ìôî)
  firebase: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üî• [Firebase]', ...args);
    // }
  },
  
  // üéØ Îû≠ÌÇπ Î°úÍ∑∏ (ÎπÑÌôúÏÑ±Ìôî)
  ranking: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üèÜ [Ranking]', ...args);
    // }
  },
  
  // üéØ Ï±ÑÌåÖ Î°úÍ∑∏ (ÎπÑÌôúÏÑ±Ìôî)
  chat: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üí¨ [Chat]', ...args);
    // }
  },
  
  // üéØ ÌÜµÍ≥Ñ Î°úÍ∑∏ (ÎπÑÌôúÏÑ±Ìôî)
  stats: (...args) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.log('üìä [Stats]', ...args);
    // }
  }
};

// ÏÑ±Îä• Ï∏°Ï†ï ÎèÑÍµ¨ (ÎπÑÌôúÏÑ±Ìôî)
export const performance = {
  start: (label) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.time(`‚è±Ô∏è ${label}`);
    // }
  },
  
  end: (label) => {
    // if (isDev && !LOGGING_DISABLED) {
    //   console.timeEnd(`‚è±Ô∏è ${label}`);
    // }
  }
};

export default logger;
