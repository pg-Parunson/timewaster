// üõ†Ô∏è Î°úÍπÖ Ïú†Ìã∏Î¶¨Ìã∞ - Í∞úÎ∞ú/Ïö¥ÏòÅ ÌôòÍ≤Ω Íµ¨Î∂Ñ
// Production ÎπåÎìúÏóêÏÑúÎäî Î™®Îì† console.* Ïù¥ ÏûêÎèô Ï†úÍ±∞Îê® (vite.config.js ÏÑ§Ï†ï)

const isDev = import.meta.env.DEV || import.meta.env.MODE === 'development';

// üéØ Ï§ëÏöî Î°úÍ∑∏Îßå Ï∂úÎ†•ÌïòÎäî ÌïÑÌÑ∞ÎßÅ ÏãúÏä§ÌÖú
const IMPORTANT_ONLY = false; // üîß Î≤ÑÍ∑∏ ÏàòÏ†ï ÌÖåÏä§Ìä∏Î•º ÏúÑÌï¥ ÏûÑÏãúÎ°ú false

// Í∞úÎ∞ú Î™®ÎìúÏóêÏÑúÎßå Î°úÍ∑∏ Ï∂úÎ†•
export const logger = {
  // üéØ ÏµúÏö∞ÏÑ† ÎîîÎ≤ÑÍ∑∏ Î°úÍ∑∏ (Ìï≠ÏÉÅ Ï∂úÎ†•)
  critical: (...args) => {
    if (isDev) {
      console.log('üö® [CRITICAL]', ...args);
    }
  },
  
  debug: (...args) => {
    if (isDev && !IMPORTANT_ONLY) {
      console.log('üêõ [DEBUG]', ...args);
    }
  },
  
  info: (...args) => {
    if (isDev && !IMPORTANT_ONLY) {
      console.info('‚ÑπÔ∏è [INFO]', ...args);
    }
  },
  
  warn: (...args) => {
    if (isDev) {
      console.warn('‚ö†Ô∏è [WARN]', ...args);
    }
  },
  
  error: (...args) => {
    if (isDev) {
      console.error('‚ùå [ERROR]', ...args);
    }
  },
  
  // üéØ Firebase Ï§ëÏöî Î°úÍ∑∏Îßå
  firebase: (...args) => {
    if (isDev) {
      console.log('üî• [Firebase]', ...args);
    }
  },
  
  // üéØ Îû≠ÌÇπ Ï§ëÏöî Î°úÍ∑∏Îßå
  ranking: (...args) => {
    if (isDev) {
      console.log('üèÜ [Ranking]', ...args);
    }
  },
  
  // üéØ Ï±ÑÌåÖ Ï§ëÏöî Î°úÍ∑∏Îßå
  chat: (...args) => {
    if (isDev && !IMPORTANT_ONLY) {
      console.log('üí¨ [Chat]', ...args);
    }
  },
  
  // üéØ ÌÜµÍ≥Ñ ÌïµÏã¨ Î°úÍ∑∏Îßå
  stats: (...args) => {
    if (isDev) {
      console.log('üìä [Stats]', ...args);
    }
  }
};

// ÏÑ±Îä• Ï∏°Ï†ï ÎèÑÍµ¨ (Í∞úÎ∞ú Î™®Îìú Ï†ÑÏö©)
export const performance = {
  start: (label) => {
    if (isDev && !IMPORTANT_ONLY) {
      console.time(`‚è±Ô∏è ${label}`);
    }
  },
  
  end: (label) => {
    if (isDev && !IMPORTANT_ONLY) {
      console.timeEnd(`‚è±Ô∏è ${label}`);
    }
  }
};

export default logger;
