import React, { useRef } from 'react';\nimport { Sparkles } from 'lucide-react';\n\n// 메시지 섹션 컴포넌트 - 프레임 밖 튀어나가기 문제 해결\nconst MessageSection = ({ \n  displayMessage, \n  isTyping, \n  messageShake, \n  extremeMode, \n  onRefreshMessage \n}) => {\n  const messageRef = useRef(null);\n\n  return (\n    <div className=\"relative mb-6 w-full\"> {/* 최상위 컨테이너 안정화 */}\n      <div \n        ref={messageRef}\n        className={`message-container cursor-pointer group transition-all duration-300 w-full ${\n          messageShake ? 'animate-bounce' : ''\n        }`}\n        onClick={onRefreshMessage}\n      >\n        {/* 카드 배경 - 완전 안정화된 컨테이너 */}\n        <div className=\"\n          bg-gradient-to-r from-white/10 to-white/5 \n          backdrop-blur-xl border border-white/20 \n          p-4 sm:p-6 lg:p-8 \n          min-h-[120px] sm:min-h-[140px] lg:min-h-[160px]\n          w-full\n          rounded-2xl lg:rounded-3xl\n          flex items-center justify-center \n          relative overflow-hidden\n          transform-none\n        \"> {/* transform 속성 완전 제거 */}\n          \n          {/* 배경 패턴 */}\n          <div className=\"absolute inset-0 opacity-5\">\n            <div className=\"absolute top-4 left-4 w-2 h-2 bg-white rounded-full animate-ping\"></div>\n            <div className=\"absolute top-8 right-8 w-1 h-1 bg-white rounded-full animate-ping delay-1000\"></div>\n            <div className=\"absolute bottom-6 left-8 w-1.5 h-1.5 bg-white rounded-full animate-ping delay-2000\"></div>\n          </div>\n          \n          {/* 메인 텍스트 - 완전 안정화된 텍스트 영역 */}\n          <div className=\"relative z-10 text-center w-full max-w-full\">\n            <div className=\"\n              px-2 sm:px-4 lg:px-6\n              mx-auto\n              max-w-[90%] sm:max-w-[85%] lg:max-w-[80%]\n              overflow-hidden\n            \"> {/* 텍스트를 감싸는 안정적인 컨테이너 */}\n              <p className={`\n                text-sm sm:text-base lg:text-xl xl:text-2xl \n                leading-relaxed font-medium text-white \n                transition-all duration-300 \n                break-words \n                text-center\n                w-full\n                display-inline-block\n                ${\n                  isTyping ? 'animate-pulse' : ''\n                }\n              `}\n              style={{ \n                wordBreak: 'keep-all',\n                overflowWrap: 'break-word',\n                hyphens: 'auto',\n                whiteSpace: 'pre-wrap', // 줄바꿈 처리 개선\n                minHeight: '1.5em', // 최소 높이 보장\n                lineHeight: '1.6'\n              }}>\n                {displayMessage}\n                {isTyping && (\n                  <span className=\"animate-ping text-red-400 ml-1 inline-block\">|</span>\n                )}\n              </p>\n            </div>\n            \n            {/* 호버 효과 표시 - 위치 안정화 */}\n            <div className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-300 mt-3 sm:mt-4\">\n              <div className=\"flex items-center justify-center gap-2 text-white/50 text-xs sm:text-sm\">\n                <Sparkles className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                <span>클릭해서 새로운 메시지 보기</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* 극한 모드 효과 - 위치 고정 */}\n          {extremeMode && (\n            <div className=\"absolute top-3 sm:top-4 right-3 sm:right-4 z-20\">\n              <div className=\"bg-red-500 text-white px-2 sm:px-3 py-1 rounded-full text-xs font-bold transform-none\">\n                🚨 극한!\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSection;"